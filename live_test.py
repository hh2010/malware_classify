#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
This script will read a CSV file generated from Argus
  and output results of the Malware Classification models
"""

import pickle
import pandas as pd
import argparse
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.svm import LinearSVC

## Set up the Argument Parser to input CSV files ##
parser = argparse.ArgumentParser()
parser.add_argument('--input_csv', default='live/live.csv')
args = parser.parse_args()

## Load the Pickled models ##
with open('live/logit.pkl', 'rb') as f:
    logit = pickle.load(f)

with open('live/svc.pkl', 'rb') as f:
    svc = pickle.load(f)

with open('live/forest.pkl', 'rb') as f:
    forest = pickle.load(f)

with open('live/scale.pkl', 'rb') as f:
    std_scale = pickle.load(f)

## Load the Argus generated CSV ##
df = pd.read_csv(args.input_csv)

## Preprocess the CSV File for Use with Model ##
df['State'] = df['State'].map(lambda x: 1 if x == 'REQ' else 0)
#  df = df[df['sHops'] <= 1]
df = df.dropna(subset=['sMaxPktSz'])
df = df.fillna(df.mean())
#  df = df.iloc[:,:7]
df_scale = std_scale.transform(df)

## Run the Model ##
logit_pred = logit.predict(df_scale)
svc_pred = svc.predict(df_scale)
forest_pred = forest.predict(df_scale)

## Output the Results to Console ##
print('\n')
print('Logistic Regression\nPositive Records:', sum(logit_pred))
print('Total Records:', len(logit_pred))
print('% Positive:', float(int(10000*sum(logit_pred)/len(logit_pred))/100), '\n')
print('Linear SVC\nPositive Records:', sum(svc_pred))
print('Total Records:', len(svc_pred))
print('% Positive:', float(int(10000*sum(svc_pred)/len(svc_pred))/100), '\n')
print('Random Forests\nPositive Records:', sum(forest_pred))
print('Total Records:', len(forest_pred))
print('% Positive:', float(int(10000*sum(forest_pred)/len(forest_pred))/100), '\n')
